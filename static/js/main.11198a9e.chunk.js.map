{"version":3,"sources":["reducers.js","store.js","index.js","Counter.js"],"names":["initialState","counter","store","createStore","state","type","ReactDOM","render","Provider","value","props","useMappedState","dispatch","useDispatch","name","onClick","document","getElementById"],"mappings":"kNAAMA,EAAe,CACjBC,QAAS,GCEN,IAAMC,EAASC,YDCP,WAA8C,IAA7BC,EAA4B,uDAApBJ,EACpC,QADwD,wCAC1CK,MACV,IAAK,YACD,MAAO,CAACJ,QAASG,EAAMH,QAAQ,GACnC,IAAK,YACD,MAAO,CAACA,QAASG,EAAMH,QAAQ,GACnC,QACI,OAAOG,K,MELnBE,IAASC,OACP,gBAAC,IAAaC,SAAd,CAAuBC,MAAOP,GAC1B,gBCJS,SAAiBQ,GAE5B,IAAMT,EAAUU,YAAe,SAAAP,GAAK,OAAGA,EAAMH,UAEvCW,EAAWC,cACjB,OACI,2BACI,oCACYH,EAAMI,KACbb,EAFL,UAIA,2BACI,0BAAQc,QAAS,kBAAIH,EAAS,CAACP,KAAK,gBAApC,aACA,0BAAQU,QAAS,kBAAIH,EAAS,CAACP,KAAK,gBAApC,gBDTV,CAASS,KAAK,UAElBE,SAASC,eAAe,U","file":"static/js/main.11198a9e.chunk.js","sourcesContent":["const initialState = {\n    counter: 0\n}\n\nexport default function reducer(state = initialState,action){\n    switch(action.type){\n        case \"INCREMENT\":\n            return {counter: state.counter+1}\n        case \"DECREMENT\":\n            return {counter: state.counter-1}\n        default:\n            return state;\n    }\n}","import {createStore} from 'redux';\nimport reducer from './reducers';\n\nexport const store  = createStore(reducer);","import * as React from 'react';\nimport {StoreContext} from 'redux-react-hook';\nimport ReactDOM from \"react-dom\";\nimport {store} from './store';\nimport Counter from './Counter';\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n      <Counter name=\"Sara\" />\n  </StoreContext.Provider>, \n  document.getElementById(\"root\")\n);","import * as React from 'react';\nimport \"./styles.css\";\nimport {useMappedState,useDispatch} from 'redux-react-hook';\n\nexport default function Counter(props) {\n\n    const counter = useMappedState(state=> state.counter);\n    \n    const dispatch = useDispatch();\n    return (\n        <div>\n            <h1>\n                Hello, {props.name}\n                {counter} times\n            </h1>\n            <div>\n                <button onClick={()=>dispatch({type:\"INCREMENT\"})}>Increment</button>\n                <button onClick={()=>dispatch({type:\"DECREMENT\"})}>Decrement</button>\n            </div>\n        </div>\n    );\n}"],"sourceRoot":""}